
/* Drop Triggers */

DROP TRIGGER TRI_CMS_MNUM;
DROP TRIGGER TRI_SNS_SNSNUM;
DROP TRIGGER TRI_UPDATELOG_LOGNUM;



/* Drop Tables */

DROP TABLE SNS CASCADE CONSTRAINTS;
DROP TABLE UPDATELOG CASCADE CONSTRAINTS;
DROP TABLE CMS CASCADE CONSTRAINTS;
DROP TABLE CMANAGER CASCADE CONSTRAINTS;



/* Drop Sequences */

DROP SEQUENCE SEQ_CMS_MNUM;
DROP SEQUENCE SEQ_SNS_SNSNUM;
DROP SEQUENCE SEQ_UPDATELOG_LOGNUM;




/* Create Sequences */

CREATE SEQUENCE SEQ_CMS_MNUM INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_SNS_SNSNUM INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_UPDATELOG_LOGNUM INCREMENT BY 1 START WITH 1;



/* Create Tables */

CREATE TABLE CMANAGER
(
	MID varchar2(30) NOT NULL UNIQUE,
	MNAME varchar2(30) NOT NULL,
	PRIMARY KEY (MID)
);


CREATE TABLE CMS
(
	MNUM number(10,0) NOT NULL UNIQUE,
	REGDATE date DEFAULT SYSDATE NOT NULL,
	REGTIME varchar2(30) NOT NULL,
	CTYPE varchar2(30) NOT NULL,
	CCATEGORY varchar2(30) NOT NULL,
	FIRSTM varchar2(30) NOT NULL,
	CCONTENT varchar2(100),
	CADDRESS varchar2(30),
	FIRSTRESULT varchar2(30) NOT NULL,
	TRANSF varchar2(30),
	SECREGDATE date,
	SECM varchar2(30),
	SECRESULT varchar2(30),
	IFSNS varchar2(30) NOT NULL,
	CMARKING varchar2(30),
	PRIMARY KEY (MNUM)
);


CREATE TABLE SNS
(
	SNSNUM number(10,0) NOT NULL UNIQUE,
	FROMM varchar2(30) NOT NULL,
	CMSNUM number(10,0) NOT NULL,
	SNSCONTENT varchar2(100) NOT NULL,
	TOM varchar2(30) NOT NULL,
	PRIMARY KEY (SNSNUM)
);


CREATE TABLE UPDATELOG
(
	LOGNUM number(10,0) NOT NULL UNIQUE,
	MNUM number(10,0) NOT NULL,
	REGDATE date NOT NULL,
	CTYPE varchar2(30) NOT NULL,
	CCATEGORY varchar2(30) NOT NULL,
	FIRSTM varchar2(30) NOT NULL,
	CCONTENT varchar2(100),
	CADDRESS varchar2(30),
	FIRSTRESULT varchar2(30) NOT NULL,
	TRANSF varchar2(30),
	SECREGDATE date,
	SECM varchar2(30),
	SECRESULT varchar2(30),
	IFSNS varchar2(30) NOT NULL,
	CMARKING varchar2(30),
	MODIFIER varchar2(30) NOT NULL,
	UPDATEDATE date DEFAULT SYSDATE NOT NULL,
	PRIMARY KEY (LOGNUM)
);



/* Create Foreign Keys */

ALTER TABLE CMS
	ADD FOREIGN KEY (TRANSF)
	REFERENCES CMANAGER (MID)
;


ALTER TABLE CMS
	ADD FOREIGN KEY (SECM)
	REFERENCES CMANAGER (MID)
;


ALTER TABLE CMS
	ADD FOREIGN KEY (FIRSTM)
	REFERENCES CMANAGER (MID)
;


ALTER TABLE SNS
	ADD FOREIGN KEY (TOM)
	REFERENCES CMANAGER (MID)
;


ALTER TABLE SNS
	ADD FOREIGN KEY (FROMM)
	REFERENCES CMANAGER (MID)
;


ALTER TABLE UPDATELOG
	ADD FOREIGN KEY (FIRSTM)
	REFERENCES CMANAGER (MID)
;


ALTER TABLE UPDATELOG
	ADD FOREIGN KEY (TRANSF)
	REFERENCES CMANAGER (MID)
;


ALTER TABLE UPDATELOG
	ADD FOREIGN KEY (MODIFIER)
	REFERENCES CMANAGER (MID)
;


ALTER TABLE UPDATELOG
	ADD FOREIGN KEY (SECM)
	REFERENCES CMANAGER (MID)
;


ALTER TABLE SNS
	ADD FOREIGN KEY (CMSNUM)
	REFERENCES CMS (MNUM)
;


ALTER TABLE UPDATELOG
	ADD FOREIGN KEY (MNUM)
	REFERENCES CMS (MNUM)
;



/* Create Triggers */

CREATE OR REPLACE TRIGGER TRI_CMS_MNUM BEFORE INSERT ON CMS
FOR EACH ROW
BEGIN
	SELECT SEQ_CMS_MNUM.nextval
	INTO :new.MNUM
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_SNS_SNSNUM BEFORE INSERT ON SNS
FOR EACH ROW
BEGIN
	SELECT SEQ_SNS_SNSNUM.nextval
	INTO :new.SNSNUM
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_UPDATELOG_LOGNUM BEFORE INSERT ON UPDATELOG
FOR EACH ROW
BEGIN
	SELECT SEQ_UPDATELOG_LOGNUM.nextval
	INTO :new.LOGNUM
	FROM dual;
END;

/




