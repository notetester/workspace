
/* Drop Triggers */

DROP TRIGGER TRI_ORDERINFORMATION_ORDERNUMBER;
DROP TRIGGER TRI_ORDERLIST_LISTNUMBER;



/* Drop Tables */

DROP TABLE ORDERLIST CASCADE CONSTRAINTS;
DROP TABLE ORDERINFORMATION CASCADE CONSTRAINTS;
DROP TABLE MEMBERINFORMATION CASCADE CONSTRAINTS;
DROP TABLE PRODUCTINFORMATION CASCADE CONSTRAINTS;



/* Drop Sequences */

DROP SEQUENCE SEQ_ORDERINFORMATION_ORDERNUMBER;
DROP SEQUENCE SEQ_ORDERLIST_LISTNUMBER;




/* Create Sequences */

CREATE SEQUENCE SEQ_ORDERINFORMATION_ORDERNUMBER INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_ORDERLIST_LISTNUMBER INCREMENT BY 1 START WITH 1;



/* Create Tables */

CREATE TABLE MEMBERINFORMATION
(
	MEMBERID varchar2(30) NOT NULL UNIQUE,
	MEMBERNAME varchar2(30) NOT NULL,
	MEMBERCALL varchar2(30) NOT NULL,
	MEMBERADDRESS varchar2(100) NOT NULL,
	MEMBERMESSAGE varchar2(100),
	PRIMARY KEY (MEMBERID)
);


CREATE TABLE ORDERINFORMATION
(
	ORDERNUMBER number(10,0) NOT NULL UNIQUE,
	MEMBERID varchar2(30) NOT NULL,
	ORDERDATE date DEFAULT SYSDATE NOT NULL,
	PAYMENTSTATUS varchar2(30) NOT NULL,
	PAYMENTMETHOD varchar2(30) NOT NULL,
	DELIVERYNUMBER varchar2(30) NOT NULL UNIQUE,
	DELIVERYCOMPANY varchar2(30) NOT NULL,
	DELIVERYNAME varchar2(30) NOT NULL,
	DELIVERYCALL varchar2(30) NOT NULL,
	DELIVERYADDRESS varchar2(100) NOT NULL,
	DELIVERYMESSAGE varchar2(100),
	RESULTPRICE number(10,0) NOT NULL,
	PRIMARY KEY (ORDERNUMBER)
);


CREATE TABLE ORDERLIST
(
	LISTNUMBER number(10,0) NOT NULL UNIQUE,
	PRODUCTID varchar2(30) NOT NULL,
	ORDERNUMBER number(10,0) NOT NULL,
	ORDERQUANTITY number(10,0) NOT NULL,
	ORDERPRICE number(10,0) NOT NULL,
	PRIMARY KEY (LISTNUMBER)
);


CREATE TABLE PRODUCTINFORMATION
(
	PRODUCTID varchar2(30) NOT NULL UNIQUE,
	PRODUCTNAME varchar2(30) NOT NULL,
	PRODUCTPRICE number(10,0) NOT NULL,
	PRODUCTMANUAL varchar2(1000) NOT NULL,
	PRODUCTQUANTITY number(10,0) NOT NULL,
	PRIMARY KEY (PRODUCTID)
);



/* Create Foreign Keys */

ALTER TABLE ORDERINFORMATION
	ADD FOREIGN KEY (MEMBERID)
	REFERENCES MEMBERINFORMATION (MEMBERID)
;


ALTER TABLE ORDERLIST
	ADD FOREIGN KEY (ORDERNUMBER)
	REFERENCES ORDERINFORMATION (ORDERNUMBER)
;


ALTER TABLE ORDERLIST
	ADD FOREIGN KEY (PRODUCTID)
	REFERENCES PRODUCTINFORMATION (PRODUCTID)
;



/* Create Triggers */

CREATE OR REPLACE TRIGGER TRI_ORDERINFORMATION_ORDERNUMBER BEFORE INSERT ON ORDERINFORMATION
FOR EACH ROW
BEGIN
	SELECT SEQ_ORDERINFORMATION_ORDERNUMBER.nextval
	INTO :new.ORDERNUMBER
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_ORDERLIST_LISTNUMBER BEFORE INSERT ON ORDERLIST
FOR EACH ROW
BEGIN
	SELECT SEQ_ORDERLIST_LISTNUMBER.nextval
	INTO :new.LISTNUMBER
	FROM dual;
END;

/




