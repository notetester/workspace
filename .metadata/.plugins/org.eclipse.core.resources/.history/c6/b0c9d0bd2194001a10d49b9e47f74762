package jdbc.basic;
import java.sql.*;
public class JDBCSelect {

	public static void main(String[] args) {
		/*
		 * 	CREATE TABLE MEMBER01 (
			    ID VARCHAR2(30) NOT NULL,
			    PW VARCHAR2(30),
			    NAME VARCHAR2(30),
			    EMAIL VARCHAR2(30),
			    ADDRESS VARCHAR2(50)
			);
			ALTER TABLE MEMBER01 ADD CONSTRAINT MEMBER01_PK PRIMARY KEY (ID);
			INSERT INTO MEMBER01 VALUES('kkk123','1234','홍길동','kkk123@naver.com','서울시');
			INSERT INTO MEMBER01 VALUES('aaa123','1234','홍길순','aaa123@naver.com','경기도');
			INSERT INTO MEMBER01 VALUES('bbb123','1234','이순신','bbb123@naver.com','부산시');
		 */
		// JDBC 셀렉트
		// 1. DB 연결에 필요한 접속 정보를 선언
		String url="jdbc:oracle:thin:@localhost:1521/XEPDB1";
		String uid="TEST01";
		String upw="TEST01";
		// 사용할 SQL문 String 변수에 저장
		String sql="select * from member01 order by id desc";
		// 2. DB 연동에 사용할 클래스 변수들을 선언
		Connection conn=null; // DB 연결
		PreparedStatement pstmt=null; // SQL 전송 객체
		ResultSet rs=null; // 쿼리 결과 저장 객체
		/*
		 * java.sql 패키지에 클래스들을 사용하려면, 반드시 try~catch블록 안에서 사용합니다.
		 * 그 이유는 해당 메서드들이 모두 예외 던지기 throws 처리가 되어있기 때문입니다.
		 */
		try {
			// 3. Connector 안에 연결 드라이버를 호출
			Class.forName("oracle.jdbc.driver.OracleDriver");
			// 4. 커넥션 객체 생성
			// 커넥션 객체 생성시에는 직접 new로 사용할 수 없고, DriverManager 클래스가 제공하는 getter 메서드를 통해서 생성
			conn=DriverManager.getConnection(url,uid,upw);
			// 5. SQL 쿼리문을 실행해주는 Statement 객체를 생성
			pstmt=conn.prepareStatement(sql);
			// 6. SQL문의 실행 - 셀렉트 구문 : executeQuery(), 인서트, 딜리트, 업데이트 executeUpdate()
			rs=pstmt.executeQuery();
			// select 구문의 결과로 데이터가 존재하면 next() 메서드는 true를 반환함
			// select 구문의 실행 결과를 하나씩 처리할 때, rs.getString(컬럼명) rs.getInt(컬럼명) rs.getTimeStamp(컬럼명)을 사용합니다.
			while(rs.next()) {
				String id=rs.getString("ID");
				String pw=rs.getString("PW");
				String name=rs.getString("NAME");
				String email=rs.getString("EMAIL");
				String address=rs.getString("ADDRESS");
				System.out.println("-------------------------");
				System.out.println(id);
				System.out.println(pw);
				System.out.println(name);
				System.out.println(email);
				System.out.println(address);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			try {
				if(conn!=null) {conn.close();}
				if(pstmt!=null) {pstmt.close();}
				if(rs!=null) {rs.close();}
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
	}

}
